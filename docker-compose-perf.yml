version: "3.7"

networks:
  mojaloop-net:
    name: mojaloop-net

services:

  account-lookup-service:
    image: mojaloop/account-lookup-service:${ACCOUNT_LOOKUP_SERVICE_VERSION}
    env_file:
      - .env
      - perf.env
    scale: 1
    command: sh -c "/opt/app/config-modifier/run.js /opt/app/config/default.json /opt/app/config-modifier/configs/account-lookup-service.js /opt/app/config/default.json && /opt/app/wait4/wait4.js account-lookup-service && npm run migrate && node src/index.js server"
    # ports:
    #   - "4001:4001"
    #   - "4002:4002"
    environment:
      ## Wait 4 Config script
      - WAIT4_CONFIG=./wait4.config.perf-als.js
      - LOG_LEVEL=info
      ## Disable Logging by setting LOG_LEVEL to error
      # - LOG_LEVEL=error
      ## Configuration for EVENT SDK ASYNC OVERRIDES - https://github.com/mojaloop/event-sdk#configuration
      # - EVENT_SDK_ASYNC_OVERRIDE_EVENTS=""
      # - EVENT_SDK_ASYNC_OVERRIDE_EVENTS=log,audit,trace
      ## Disable EVENT SDK LOGs - https://github.com/mojaloop/event-sdk#configuration
      # - EVENT_SDK_LOG_FILTER=""
      ## Allows TraceID to be propogated - https://github.com/mojaloop/event-sdk#configuration
      - EVENT_SDK_TRACEID_PER_VENDOR=false
      ## Disable API Routes from displaying on startup
      - ALS_DISPLAY_ROUTES=false
      ## Configure Switch Endpoint
      - ALS_SWITCH_ENDPOINT=http://callback-handler-svc-cl-sim:3001/admin
      ## Increase UV Threads for IO Operations - https://nodejs.org/api/cli.html#uv_threadpool_sizesize
      - UV_THREADPOOL_SIZE=16
      ## Temporary Cache configuration for v14.2.4-snapshot.3 @ https://github.com/mojaloop/account-lookup-service/pull/461
      # - NODE_CACHE_ENABLED=true
    networks:
      - mojaloop-net
    depends_on:
      mysql-als:
        condition: service_started
    volumes:
      - ./docker/wait4:/opt/app/wait4
      - ./docker/config-modifier:/opt/app/config-modifier
    healthcheck:
      test: wget -q http://localhost:4001/health -O /dev/null || exit 1
      timeout: 20s
      retries: 10
      start_period: 40s
      interval: 30s
    user: root
    profiles:
      - account-lookup-service
      - discovery
      - all-services
      - als-test

  mysql-als:
    image: mysql/mysql-server
    env_file:
      - .env
      - perf.env
    container_name: mysql-als
    ports:
      - "3307:3306"
    volumes:
      - ./docker/sql-als-init/:/docker-entrypoint-initdb.d/
    environment:
      - MYSQL_USER=${DBUSER:-account_lookup}
      - MYSQL_PASSWORD=${DBPASS:-password}
      - MYSQL_DATABASE=${DBUSER:-account_lookup}
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
    networks:
      - mojaloop-net
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "mysql-als"]
      timeout: 20s
      retries: 10
      start_period: 40s
      interval: 30s
    profiles:
      - account-lookup-service
      - discovery
      - all-services
      - als-test
    ## In memory storage - Ref: https://docs.docker.com/storage/tmpfs/
    tmpfs:
      - /var/lib/mysql

  ## Services for Transfer tests
  central-ledger:
    image: mojaloop/central-ledger:${CENTRAL_LEDGER_VERSION}
    command: sh -c "/opt/app/config-modifier/run.js /opt/app/config/default.json /opt/app/config-modifier/configs/central-ledger-disabled-handlers.js /opt/app/config/default.json && /opt/app/wait4/wait4.js central-ledger && node src/api/index.js"
    # ports:
    #   - "3001:3001"
    volumes:
       - ./docker/wait4:/opt/app/wait4
       - ./docker/config-modifier:/opt/app/config-modifier
    environment:
      ## Wait 4 Config script
      - WAIT4_CONFIG=./wait4.config.perf-cl.js
      - LOG_LEVEL=info
      - CLEDG_MONGODB__DISABLED=true
      - EVENT_SDK_TRACEID_PER_VENDOR=false
    networks:
      - mojaloop-net
    depends_on:
      mysql-cl:
        condition: service_healthy
      kafka:
        condition: service_started
      # objstore:
      #   condition: service_started
    healthcheck:
      test: wget -q http://localhost:3001/health -O /dev/null || exit 1
      timeout: 20s
      retries: 30
      interval: 30s
      start_period: 30s
    user: root
    profiles:
      - central-ledger
      - transfer
      - discovery
      - agreement
      - all-services
      - transfers-test

  central-handler-prepare:
    image: mojaloop/central-ledger:${CENTRAL_LEDGER_VERSION}
    command: sh -c "/opt/app/config-modifier/run.js /opt/app/config/default.json /opt/app/config-modifier/configs/central-handlers.js /opt/app/config/default.json && /opt/app/wait4/wait4.js central-ledger && node src/handlers/index.js handler --prepare"
    # ports:
    #   - "3001:3001"
    volumes:
       - ./docker/wait4:/opt/app/wait4
       - ./docker/config-modifier:/opt/app/config-modifier
    environment:
      - LOG_LEVEL=info
      - CLEDG_MONGODB__DISABLED=true
      - EVENT_SDK_TRACEID_PER_VENDOR=false
    networks:
      - mojaloop-net
    depends_on:
      central-ledger:
        condition: service_healthy
      mysql-cl:
        condition: service_healthy
      kafka:
        condition: service_started
      # objstore:
      #   condition: service_started
    healthcheck:
      test: wget -q http://localhost:3001/health -O /dev/null || exit 1
      timeout: 20s
      retries: 30
      interval: 30s
      start_period: 30s
    user: root
    profiles:
      - central-ledger
      - transfer
      - discovery
      - agreement
      - all-services
      - transfers-test

  central-handler-position:
    image: mojaloop/central-ledger:${CENTRAL_LEDGER_VERSION}
    command: sh -c "/opt/app/config-modifier/run.js /opt/app/config/default.json /opt/app/config-modifier/configs/central-handlers.js /opt/app/config/default.json && /opt/app/wait4/wait4.js central-ledger && node src/handlers/index.js handler --position"
    # ports:
    #   - "3001:3001"
    volumes:
       - ./docker/wait4:/opt/app/wait4
       - ./docker/config-modifier:/opt/app/config-modifier
    environment:
      - LOG_LEVEL=info
      - CLEDG_MONGODB__DISABLED=true
      - EVENT_SDK_TRACEID_PER_VENDOR=false
    networks:
      - mojaloop-net
    depends_on:
      central-ledger:
        condition: service_healthy
      mysql-cl:
        condition: service_healthy
      kafka:
        condition: service_started
      # objstore:
      #   condition: service_started
    healthcheck:
      test: wget -q http://localhost:3001/health -O /dev/null || exit 1
      timeout: 20s
      retries: 30
      interval: 30s
      start_period: 30s
    user: root
    profiles:
      - central-ledger
      - transfer
      - discovery
      - agreement
      - all-services
      - transfers-test

  central-handler-fulfil:
    image: mojaloop/central-ledger:${CENTRAL_LEDGER_VERSION}
    command: sh -c "/opt/app/config-modifier/run.js /opt/app/config/default.json /opt/app/config-modifier/configs/central-handlers.js /opt/app/config/default.json && /opt/app/wait4/wait4.js central-ledger && node src/handlers/index.js handler --fulfil"
    # ports:
    #   - "3001:3001"
    volumes:
       - ./docker/wait4:/opt/app/wait4
       - ./docker/config-modifier:/opt/app/config-modifier
    environment:
      - LOG_LEVEL=info
      - CLEDG_MONGODB__DISABLED=true
      - EVENT_SDK_TRACEID_PER_VENDOR=false
    networks:
      - mojaloop-net
    depends_on:
      central-ledger:
        condition: service_healthy
      mysql-cl:
        condition: service_healthy
      kafka:
        condition: service_started
      # objstore:
      #   condition: service_started
    healthcheck:
      test: wget -q http://localhost:3001/health -O /dev/null || exit 1
      timeout: 20s
      retries: 30
      interval: 30s
      start_period: 30s
    user: root
    profiles:
      - central-ledger
      - transfer
      - discovery
      - agreement
      - all-services
      - transfers-test

  central-handler-timeout:
    image: mojaloop/central-ledger:${CENTRAL_LEDGER_VERSION}
    command: sh -c "/opt/app/config-modifier/run.js /opt/app/config/default.json /opt/app/config-modifier/configs/central-handlers.js /opt/app/config/default.json && /opt/app/wait4/wait4.js central-ledger && node src/handlers/index.js handler --timeout"
    # ports:
    #   - "3001:3001"
    volumes:
       - ./docker/wait4:/opt/app/wait4
       - ./docker/config-modifier:/opt/app/config-modifier
    environment:
      - LOG_LEVEL=info
      - CLEDG_MONGODB__DISABLED=true
      - EVENT_SDK_TRACEID_PER_VENDOR=false
    networks:
      - mojaloop-net
    depends_on:
      central-ledger:
        condition: service_healthy
      mysql-cl:
        condition: service_healthy
      kafka:
        condition: service_started
      # objstore:
      #   condition: service_started
    healthcheck:
      test: wget -q http://localhost:3001/health -O /dev/null || exit 1
      timeout: 20s
      retries: 30
      interval: 30s
      start_period: 30s
    user: root
    profiles:
      - central-ledger
      - transfer
      - discovery
      - agreement
      - all-services
      - transfers-test

  central-handler-get:
    image: mojaloop/central-ledger:${CENTRAL_LEDGER_VERSION}
    command: sh -c "/opt/app/config-modifier/run.js /opt/app/config/default.json /opt/app/config-modifier/configs/central-handlers.js /opt/app/config/default.json && /opt/app/wait4/wait4.js central-ledger && node src/handlers/index.js handler --get"
    # ports:
    #   - "3001:3001"
    volumes:
       - ./docker/wait4:/opt/app/wait4
       - ./docker/config-modifier:/opt/app/config-modifier
    environment:
      - LOG_LEVEL=info
      - CLEDG_MONGODB__DISABLED=true
      - EVENT_SDK_TRACEID_PER_VENDOR=false
    networks:
      - mojaloop-net
    depends_on:
      central-ledger:
        condition: service_healthy
      mysql-cl:
        condition: service_healthy
      kafka:
        condition: service_started
      # objstore:
      #   condition: service_started
    healthcheck:
      test: wget -q http://localhost:3001/health -O /dev/null || exit 1
      timeout: 20s
      retries: 30
      interval: 30s
      start_period: 30s
    user: root
    profiles:
      - central-ledger
      - transfer
      - discovery
      - agreement
      - all-services
      - transfers-test

  central-handler-admin:
    image: mojaloop/central-ledger:${CENTRAL_LEDGER_VERSION}
    command: sh -c "/opt/app/config-modifier/run.js /opt/app/config/default.json /opt/app/config-modifier/configs/central-handlers.js /opt/app/config/default.json && /opt/app/wait4/wait4.js central-ledger && node src/handlers/index.js handler --admin"
    # ports:
    #   - "3001:3001"
    volumes:
       - ./docker/wait4:/opt/app/wait4
       - ./docker/config-modifier:/opt/app/config-modifier
    environment:
      - LOG_LEVEL=info
      - CLEDG_MONGODB__DISABLED=true
      - EVENT_SDK_TRACEID_PER_VENDOR=false
    networks:
      - mojaloop-net
    depends_on:
      central-ledger:
        condition: service_healthy
      mysql-cl:
        condition: service_healthy
      kafka:
        condition: service_started
      # objstore:
      #   condition: service_started
    healthcheck:
      test: wget -q http://localhost:3001/health -O /dev/null || exit 1
      timeout: 20s
      retries: 30
      interval: 30s
      start_period: 30s
    user: root
    profiles:
      - central-ledger
      - transfer
      - discovery
      - agreement
      - all-services
      - transfers-test

  # objstore:
  #   image: mongo:6.0.5
  #   container_name: objstore
  #   ports:
  #     - "27017:27017"
  #   networks:
  #     - mojaloop-net
  #   healthcheck:
  #     test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
  #     interval: 10s
  #     timeout: 10s
  #     retries: 5
  #     start_period: 40s
  #   profiles:
  #     - central-ledger
  #     - transfer
  #     - discovery
  #     - agreement
  #     - all-services
  #     - transfers-test

  kafka-provisioning:
    container_name: kafka-provisioning
    networks:
      - mojaloop-net
    image: docker.io/bitnami/kafka:3.4.0
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics.sh --bootstrap-server kafka:29092 --list
      echo -e 'Creating kafka topics'
      kafka-topics.sh --bootstrap-server kafka:29092 --create --if-not-exists --topic topic-transfer-prepare --replication-factor 1 --partitions 1
      kafka-topics.sh --bootstrap-server kafka:29092 --create --if-not-exists --topic topic-transfer-position --replication-factor 1 --partitions 1
      kafka-topics.sh --bootstrap-server kafka:29092 --create --if-not-exists --topic topic-transfer-fulfil --replication-factor 1 --partitions 1
      kafka-topics.sh --bootstrap-server kafka:29092 --create --if-not-exists --topic topic-notification-event --replication-factor 1 --partitions 1
      kafka-topics.sh --bootstrap-server kafka:29092 --create --if-not-exists --topic topic-transfer-get --replication-factor 1 --partitions 1
      kafka-topics.sh --bootstrap-server kafka:29092 --create --if-not-exists --topic topic-admin-transfer --replication-factor 1 --partitions 1
      kafka-topics.sh --bootstrap-server kafka:29092 --create --if-not-exists --topic topic-bulk-prepare --replication-factor 1 --partitions 1
      kafka-topics.sh --bootstrap-server kafka:29092 --create --if-not-exists --topic topic-bulk-fulfil --replication-factor 1 --partitions 1
      kafka-topics.sh --bootstrap-server kafka:29092 --create --if-not-exists --topic topic-bulk-processing --replication-factor 1 --partitions 1
      kafka-topics.sh --bootstrap-server kafka:29092 --create --if-not-exists --topic topic-bulk-get --replication-factor 1 --partitions 1
      echo -e 'Successfully created the following topics:'
      kafka-topics.sh --bootstrap-server kafka:29092 --list
      "
    profiles:
      - central-ledger
      - transfer
      - discovery
      - agreement
      - all-services
      - transfers-test

  kafka:
    networks:
      - mojaloop-net
    image: docker.io/bitnami/kafka:3.4.0
    container_name: kafka
    # ports:
    #   - "9092:9092"
    environment:
      # BITNAMI_DEBUG: "yes"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_CFG_LISTENERS: CONTROLLER://:9093,LISTENER_DOCKER://kafka:29092,LISTENER_EXTERN://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: LISTENER_DOCKER://kafka:29092,LISTENER_EXTERN://:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,LISTENER_DOCKER:PLAINTEXT,LISTENER_EXTERN:PLAINTEXT
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_MESSAGE_MAX_BYTES: 200000000
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@127.0.0.1:9093
      KAFKA_ENABLE_KRAFT: "true"
    healthcheck:
      test: ["CMD" ,"/opt/bitnami/kafka/bin/kafka-broker-api-versions.sh","--bootstrap-server","kafka:9092"]
      timeout: 20s
      retries: 10
      start_period: 40s
      interval: 30s
    profiles:
      - central-ledger
      - transfer
      - discovery
      - agreement
      - all-services
      - transfers-test

  mysql-cl:
    image: mysql/mysql-server
    container_name: mysql-cl
    # ports:
    #   - "3306:3306"
    volumes:
      # Note: this fixes the permissions issue, but docker-compose up will fail on first attempt
      - ./docker/sql-cl-init/:/docker-entrypoint-initdb.d/
    environment:
      - MYSQL_USER=${DBUSER:-central_ledger}
      - MYSQL_PASSWORD=${DBPASS:-password}
      - MYSQL_DATABASE=${DBUSER:-central_ledger}
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
    networks:
      - mojaloop-net
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "mysql-cl"]
      timeout: 20s
      retries: 10
      start_period: 40s
      interval: 30s
    profiles:
      - central-ledger
      - transfer
      - discovery
      - agreement
      - all-services
      - transfers-test

  ml-api-adapter:
    image: mojaloop/ml-api-adapter:${ML_API_ADAPTER_VERSION}
    container_name: ml-api-adapter
    command: sh -c "/opt/app/config-modifier/run.js /opt/app/config/default.json /opt/app/config-modifier/configs/ml-api-adapter-disabled-handlers.js /opt/app/config/default.json && /opt/app/wait4/wait4.js ml-api-adapter && node src/api/index.js"
    # ports:
    #   - "3000:3000"
    volumes:
      - ./docker/wait4:/opt/app/wait4
      - ./docker/config-modifier:/opt/app/config-modifier
    environment:
      - LOG_LEVEL=info
      - EVENT_SDK_TRACEID_PER_VENDOR=false
    networks:
      - mojaloop-net
    depends_on:
      kafka:
        condition: service_healthy
      central-ledger:
        condition: service_healthy
    healthcheck:
      test: wget -q http://localhost:3000/health -O /dev/null || exit 1
      timeout: 30s
      retries: 30
      interval: 30s
      start_period: 30s
    user: root
    profiles:
      - ml-api-adapter
      - transfer
      - all-services
      - transfers-test

  ml-handler-notification:
    image: mojaloop/ml-api-adapter:${ML_API_ADAPTER_VERSION}
    command: sh -c "/opt/app/config-modifier/run.js /opt/app/config/default.json /opt/app/config-modifier/configs/ml-handler-notification.js /opt/app/config/default.json && /opt/app/wait4/wait4.js ml-api-adapter && node src/handlers/index.js handler --notification"
    # ports:
    #   - "3000:3000"
    volumes:
      - ./docker/wait4:/opt/app/wait4
      - ./docker/config-modifier:/opt/app/config-modifier
    environment:
      - LOG_LEVEL=info
    networks:
      - mojaloop-net
    depends_on:
      kafka:
        condition: service_started
      central-ledger:
        condition: service_started
    healthcheck:
      test: wget -q http://localhost:3000/health -O /dev/null || exit 1
      timeout: 30s
      retries: 30
      interval: 30s
      start_period: 30s
    user: root
    profiles:
      - ml-api-adapter
      - transfer
      - all-services
      - transfers-test

  ## Testing Toolkit
  mojaloop-testing-toolkit:
    image: mojaloop/ml-testing-toolkit:v16.1.1
    env_file:
      - .env
      - perf.env
    volumes:
      - "./docker/ml-testing-toolkit/spec_files:/opt/app/spec_files"
      - "./docker/ml-testing-toolkit/test-cases:/opt/app/examples"
    ports:
      - "4040:4040"
      - "5050:5050"
    user: root
    command:
      - sh
      - -c
      - "npm start"
    networks:
      - mojaloop-net
    healthcheck:
      test: ["CMD-SHELL", "nc -z -v localhost 4040"]
      interval: 5s
      timeout: 10s
      start_period: 10s
      retries: 10
    profiles:
      - testing-toolkit
      - all-services
      - als-test
      - transfers-test

  mojaloop-testing-toolkit-ui:
    image: mojaloop/ml-testing-toolkit-ui:v15.3.0
    env_file:
      - .env
      - perf.env
    ports:
      - "6060:6060"
    environment:
      # - API_BASE_URL=http://localhost:5050
      - AUTH_ENABLED=FALSE
    command:
      - sh
      - /usr/share/nginx/start.sh
    networks:
      - mojaloop-net
    profiles:
      - testing-toolkit
      - all-services
      - als-test
      - transfers-test

  ttk-provisioning-als:
    image: mojaloop/ml-testing-toolkit-client-lib:v1.2.0
    env_file:
      - .env
      - perf.env
    volumes:
      - "./docker/ml-testing-toolkit/test-cases/collections:/opt/app/collections"
      - "./docker/ml-testing-toolkit/test-cases/environments:/opt/app/environments"
      - "./reports:/opt/app/reports"
    depends_on:
      mojaloop-testing-toolkit:
        condition: service_healthy
      account-lookup-service:
        condition: service_healthy
    networks:
      - mojaloop-net
    command:
      - sh
      - -c
      - "npm run cli -- -u http://mojaloop-testing-toolkit:5050 -l 2 -i collections/provisioning-perf-als -e environments/default-env.json --save-report --report-format html --report-target file://reports/ttk-provisioning-report.html"
    user: root
    profiles:
      - ttk-provisioning-als

  ttk-provisioning-transfers:
    image: mojaloop/ml-testing-toolkit-client-lib:v1.2.0
    env_file:
      - .env
      - perf.env
    volumes:
      - "./docker/ml-testing-toolkit/test-cases/collections:/opt/app/collections"
      - "./docker/ml-testing-toolkit/test-cases/environments:/opt/app/environments"
      - "./reports:/opt/app/reports"
    depends_on:
      mojaloop-testing-toolkit:
        condition: service_healthy
      ml-api-adapter:
        condition: service_healthy
      central-ledger:
        condition: service_healthy
      central-handler-prepare:
        condition: service_healthy
      central-handler-fulfil:
        condition: service_healthy
      central-handler-position:
        condition: service_healthy
      central-handler-timeout:
        condition: service_healthy
      central-handler-get:
        condition: service_healthy
      central-handler-admin:
        condition: service_healthy
    networks:
      - mojaloop-net
    command:
      - sh
      - -c
      - "npm run cli -- -u http://mojaloop-testing-toolkit:5050 -l 2 -i collections/provisioning -e environments/default-env.json --save-report --report-format html --report-target file://reports/ttk-provisioning-report.html"
    user: root
    profiles:
      - ttk-provisioning-transfers

  callback-handler-svc-oracle-sim:
    scale: 1
    image: mojaloop/callback-handler-svc:local
    env_file:
      - .env
      - perf.env
    build:
      context: ./packages/callback-handler-svc
      cache_from:
        - mojaloop/callback-handler-svc:local
    # ports:
    #   - "3001:3001"
    networks:
      - mojaloop-net
    volumes:
      - ./packages/callback-handler-svc/config:/opt/app/config
      - ./packages/callback-handler-svc/handlers:/opt/app/handlers
    environment:
      - LOG_LEVEL=info
    healthcheck:
      test: wget -q http://localhost:3001/health -O /dev/null || exit 1
      timeout: 20s
      retries: 30
      interval: 15s
    user: root
    profiles:
      - simulators
      - callback-handler
      - all-services
      - als-test

  callback-handler-svc-cl-sim:
    scale: 1
    image: mojaloop/callback-handler-svc:local
    env_file:
      - .env
      - ./envs/cl-sim.env
    build:
      context: ./packages/callback-handler-svc
      cache_from:
        - mojaloop/callback-handler-svc:local
    # ports:
    #   - "3001:3001"
    networks:
      - mojaloop-net
    volumes:
      - ./packages/callback-handler-svc/config:/opt/app/config
      - ./packages/callback-handler-svc/handlers:/opt/app/handlers
    environment:
      - LOG_LEVEL=info
    healthcheck:
      test: wget -q http://localhost:3001/health -O /dev/null || exit 1
      timeout: 20s
      retries: 30
      interval: 15s
    user: root
    profiles:
      - simulators
      - callback-handler
      - all-services
      - als-test

  sim-perffsp1:
    scale: 1
    image: mojaloop/callback-handler-svc:local
    env_file:
      - .env
      - ./envs/perffsp1.env
    build:
      context: ./packages/callback-handler-svc
      cache_from:
        - mojaloop/callback-handler-svc:local
    # ports:
    #   - "3001:3001"
    networks:
      - mojaloop-net
    volumes:
      - ./packages/callback-handler-svc/config:/opt/app/config
      - ./packages/callback-handler-svc/handlers:/opt/app/handlers
    environment:
      - LOG_LEVEL=info
    healthcheck:
      test: wget -q http://localhost:3001/health -O /dev/null || exit 1
      timeout: 20s
      retries: 30
      interval: 15s
    user: root
    profiles:
      - simulators
      - callback-handler
      - all-services
      - als-test
      - 2dfsp
      - 4dfsp
      - 8dfsp

  sim-perffsp2:
    scale: 1
    image: mojaloop/callback-handler-svc:local
    env_file:
      - .env
      - ./envs/perffsp2.env
    build:
      context: ./packages/callback-handler-svc
      cache_from:
        - mojaloop/callback-handler-svc:local
    # ports:
    #   - "3001:3001"
    networks:
      - mojaloop-net
    volumes:
      - ./packages/callback-handler-svc/config:/opt/app/config
      - ./packages/callback-handler-svc/handlers:/opt/app/handlers
    environment:
      - LOG_LEVEL=info
    healthcheck:
      test: wget -q http://localhost:3001/health -O /dev/null || exit 1
      timeout: 20s
      retries: 30
      interval: 15s
    user: root
    profiles:
      - simulators
      - callback-handler
      - all-services
      - als-test
      - 2dfsp
      - 4dfsp
      - 8dfsp

  sim-perffsp3:
    scale: 1
    image: mojaloop/callback-handler-svc:local
    env_file:
      - .env
      - ./envs/perffsp3.env
    build:
      context: ./packages/callback-handler-svc
      cache_from:
        - mojaloop/callback-handler-svc:local
    # ports:
    #   - "3001:3001"
    networks:
      - mojaloop-net
    volumes:
      - ./packages/callback-handler-svc/config:/opt/app/config
      - ./packages/callback-handler-svc/handlers:/opt/app/handlers
    environment:
      - LOG_LEVEL=info
    healthcheck:
      test: wget -q http://localhost:3001/health -O /dev/null || exit 1
      timeout: 20s
      retries: 30
      interval: 15s
    user: root
    profiles:
      - 4dfsp
      - 8dfsp

  sim-perffsp4:
    scale: 1
    image: mojaloop/callback-handler-svc:local
    env_file:
      - .env
      - ./envs/perffsp4.env
    build:
      context: ./packages/callback-handler-svc
      cache_from:
        - mojaloop/callback-handler-svc:local
    # ports:
    #   - "3001:3001"
    networks:
      - mojaloop-net
    volumes:
      - ./packages/callback-handler-svc/config:/opt/app/config
      - ./packages/callback-handler-svc/handlers:/opt/app/handlers
    environment:
      - LOG_LEVEL=info
    healthcheck:
      test: wget -q http://localhost:3001/health -O /dev/null || exit 1
      timeout: 20s
      retries: 30
      interval: 15s
    user: root
    profiles:
      - 4dfsp
      - 8dfsp

  sim-perffsp5:
    scale: 1
    image: mojaloop/callback-handler-svc:local
    env_file:
      - .env
      - ./envs/perffsp5.env
    build:
      context: ./packages/callback-handler-svc
      cache_from:
        - mojaloop/callback-handler-svc:local
    # ports:
    #   - "3001:3001"
    networks:
      - mojaloop-net
    volumes:
      - ./packages/callback-handler-svc/config:/opt/app/config
      - ./packages/callback-handler-svc/handlers:/opt/app/handlers
    environment:
      - LOG_LEVEL=info
    healthcheck:
      test: wget -q http://localhost:3001/health -O /dev/null || exit 1
      timeout: 20s
      retries: 30
      interval: 15s
    user: root
    profiles:
      - 8dfsp

  sim-perffsp6:
    scale: 1
    image: mojaloop/callback-handler-svc:local
    env_file:
      - .env
      - ./envs/perffsp6.env
    build:
      context: ./packages/callback-handler-svc
      cache_from:
        - mojaloop/callback-handler-svc:local
    # ports:
    #   - "3001:3001"
    networks:
      - mojaloop-net
    volumes:
      - ./packages/callback-handler-svc/config:/opt/app/config
      - ./packages/callback-handler-svc/handlers:/opt/app/handlers
    environment:
      - LOG_LEVEL=info
    healthcheck:
      test: wget -q http://localhost:3001/health -O /dev/null || exit 1
      timeout: 20s
      retries: 30
      interval: 15s
    user: root
    profiles:
      - 8dfsp

  sim-perffsp7:
    scale: 1
    image: mojaloop/callback-handler-svc:local
    env_file:
      - .env
      - ./envs/perffsp7.env
    build:
      context: ./packages/callback-handler-svc
      cache_from:
        - mojaloop/callback-handler-svc:local
    # ports:
    #   - "3001:3001"
    networks:
      - mojaloop-net
    volumes:
      - ./packages/callback-handler-svc/config:/opt/app/config
      - ./packages/callback-handler-svc/handlers:/opt/app/handlers
    environment:
      - LOG_LEVEL=info
    healthcheck:
      test: wget -q http://localhost:3001/health -O /dev/null || exit 1
      timeout: 20s
      retries: 30
      interval: 15s
    user: root
    profiles:
      - 8dfsp

  sim-perffsp8:
    scale: 1
    image: mojaloop/callback-handler-svc:local
    env_file:
      - .env
      - ./envs/perffsp8.env
    build:
      context: ./packages/callback-handler-svc
      cache_from:
        - mojaloop/callback-handler-svc:local
    # ports:
    #   - "3001:3001"
    networks:
      - mojaloop-net
    volumes:
      - ./packages/callback-handler-svc/config:/opt/app/config
      - ./packages/callback-handler-svc/handlers:/opt/app/handlers
    environment:
      - LOG_LEVEL=info
    healthcheck:
      test: wget -q http://localhost:3001/health -O /dev/null || exit 1
      timeout: 20s
      retries: 30
      interval: 15s
    user: root
    profiles:
      - 8dfsp
