[
  {
    "type": "response",
    "version": 1,
    "ruleId": 1,
    "priority": 1,
    "description": "post /settlementWindows/{id}",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 1,
      "type": "settlements",
      "asynchronous": false
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/settlementWindows/{id}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        }
      ]
    },
    "event": {
      "method": null,
      "path": null,
      "params": {
        "body": {
          "state": "OPEN"
        },
        "statusCode": "200"
      },
      "delay": 0,
      "type": "MOCK_RESPONSE"
    }
  },
  {
    "type": "response",
    "version": 1,
    "ruleId": 3,
    "priority": 1,
    "description": "post /settlements",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 1,
      "type": "settlements",
      "asynchronous": false
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/settlements"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        }
      ]
    },
    "event": {
      "method": null,
      "path": null,
      "params": {
        "body": {
          "id": "123",
          "state": "PENDING_SETTLEMENT",
          "settlementWindows": [
            [
              {
                "id": 123,
                "createdDate": "1954-11-03",
                "state": "PENDING_SETTLEMENT",
                "reason": "do",
                "changedDate": "1954-11-03"
              }
            ]
          ],
          "participants": [
            {
              "id": -91450113,
              "accounts": [
                {
                  "id": 81795155,
                  "reason": "veniam est proident commodo aliqua",
                  "state": "PENDING_SETTLEMENT",
                  "netSettlementAmount": {
                    "amount": 100,
                    "currency": "USD"
                  }
                }
              ]
            }
          ]
        },
        "statusCode": "200"
      },
      "delay": 0,
      "type": "FIXED_RESPONSE"
    }
  },
  {
    "type": "response",
    "version": 1,
    "ruleId": 4,
    "priority": 1,
    "description": "get /settlements/{id}",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 1,
      "type": "settlements",
      "asynchronous": false
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/settlements/{id}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": null,
      "path": null,
      "params": {
        "body": {
          "id": "{$request.params.id}",
          "state": "PS_TRANSFERS_RECORDED",
          "settlementWindows": [
            [
              {
                "createdDate": "2020-02-10",
                "id": "{$request.params.id}",
                "state": "PS_TRANSFERS_RECORDED",
                "reason": "amet cillum culpa v",
                "changedDate": "2020-02-10"
              }
            ]
          ],
          "participants": [
            {
              "id": -35933071,
              "accounts": [
                {
                  "id": -14386227,
                  "reason": "aliquip aliqua nulla deserunt",
                  "state": "PS_TRANSFERS_RECORDED",
                  "netSettlementAmount": {
                    "amount": 100,
                    "currency": "USD"
                  }
                }
              ]
            }
          ]
        },
        "statusCode": "200"
      },
      "delay": 0,
      "type": "FIXED_RESPONSE"
    }
  },
  {
    "type": "response",
    "version": 1,
    "ruleId": 5,
    "priority": 1,
    "description": "get /settlementWindows",
    "apiVersion": {
      "minorVersion": 0,
      "majorVersion": 1,
      "type": "settlements",
      "asynchronous": false
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/settlementWindows"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": null,
      "path": null,
      "params": {
        "body": [
          {
            "createdDate": "2020-02-10",
            "id": 123,
            "state": "{$request.query.state}",
            "reason": "string",
            "changedDate": "2020-02-10"
          }
        ],
        "statusCode": "200"
      },
      "delay": 0,
      "type": "FIXED_RESPONSE"
    }
  },
  {
    "ruleId": 6,
    "priority": 1,
    "description": "FXP - post /fxQuotes",
    "apiVersion": {
      "minorVersion": 1,
      "majorVersion": 2,
      "type": "sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets",
      "asynchronous": false,
      "prefix": "/backend",
      "specFile": "spec_files/api_definitions/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1/api_spec.yaml",
      "callbackMapFile": "spec_files/api_definitions/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1/callback_map.json",
      "responseMapFile": "spec_files/api_definitions/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1/response_map.json",
      "jsfRefFile": "spec_files/api_definitions/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1/mockRef.json",
      "triggerTemplatesFolder": "spec_files/api_definitions/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1/trigger_templates"
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/fxQuotes"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        }
      ]
    },
    "event": {
      "method": null,
      "path": null,
      "params": {
        "body": {
          "homeTransactionId": "homeTransactionId-123",
          "conversionTerms": {
            "conversionId": "{$request.body.conversionTerms.conversionId}",
            "determiningTransferId": "b51ec534-ee48-4575-b6a9-ead2955b8069",
            "initiatingFsp": "{$request.body.conversionTerms.initiatingFsp}",
            "counterPartyFsp": "{$request.body.conversionTerms.counterPartyFsp}",
            "amountType": "SEND",
            "sourceAmount": {
              "currency": "{$request.body.conversionTerms.sourceAmount.currency}",
              "amount": "{$environment.sourceAmountValue}"
            },
            "targetAmount": {
              "currency": "{$request.body.conversionTerms.targetAmount.currency}",
              "amount": "{$environment.targetAmountValue}"
            },
            "expiration": "{$request.body.conversionTerms.expiration}",
            "charges": [
              {
                "chargeType": "string",
                "sourceAmount": {
                  "currency": "{$request.body.conversionTerms.sourceAmount.currency}",
                  "amount": "33"
                },
                "targetAmount": {
                  "currency": "{$request.body.conversionTerms.targetAmount.currency}",
                  "amount": "6000"
                }
              }
            ]
          }
        },
        "statusCode": "200",
        "scripts": {
          "exec": [
            "const fxQuoteBody = JSON.parse(request.body)",
            "environment.sourceAmountValue = fxQuoteBody.conversionTerms.sourceAmount.amount || 300",
            "environment.targetAmountValue = fxQuoteBody.conversionTerms.targetAmount.amount || 48000"
          ],
          "scriptingEngine": "javascript"
        }
      },
      "type": "FIXED_RESPONSE"
    },
    "type": "response",
    "version": 1
  },
  {
    "ruleId": 7,
    "priority": 1,
    "description": "FXP - post /fxTransfers response",
    "apiVersion": {
      "minorVersion": 1,
      "majorVersion": 2,
      "type": "sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets",
      "asynchronous": false,
      "prefix": "/backend",
      "specFile": "spec_files/api_definitions/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1/api_spec.yaml",
      "callbackMapFile": "spec_files/api_definitions/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1/callback_map.json",
      "responseMapFile": "spec_files/api_definitions/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1/response_map.json",
      "jsfRefFile": "spec_files/api_definitions/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1/mockRef.json",
      "triggerTemplatesFolder": "spec_files/api_definitions/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1/trigger_templates"
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/fxTransfers"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        }
      ]
    },
    "event": {
      "method": null,
      "path": null,
      "params": {
        "body": {
          "homeTransactionId": "{$request.body.homeTransactionId}",
          "completedTimestamp": "{$environment.completedTimestamp}",
          "conversionState": "RESERVED"
        },
        "statusCode": "200",
        "scripts": {
          "exec": [
            "environment.completedTimestamp = new Date().toISOString()"
          ],
          "scriptingEngine": "javascript"
        }
      },
      "type": "FIXED_RESPONSE"
    },
    "type": "response",
    "version": 1
  },
  {
    "ruleId": 8,
    "priority": 1,
    "description": "get /parties/{idType}/{idValue}",
    "apiVersion": {
      "minorVersion": 1,
      "majorVersion": 2,
      "type": "sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets",
      "asynchronous": false,
      "prefix": "/backend",
      "specFile": "spec_files/api_definitions/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1/api_spec.yaml",
      "callbackMapFile": "spec_files/api_definitions/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1/callback_map.json",
      "responseMapFile": "spec_files/api_definitions/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1/response_map.json",
      "jsfRefFile": "spec_files/api_definitions/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1/mockRef.json",
      "triggerTemplatesFolder": "spec_files/api_definitions/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1/trigger_templates"
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/parties/{idType}/{idValue}"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "get"
        }
      ]
    },
    "event": {
      "method": null,
      "path": null,
      "params": {
        "body": {
          "dateOfBirth": "1966-06-16",
          "displayName": "Yaro",
          "firstName": "Yaro",
          "fspId": "fxpayeedfsp",
          "idType": "ACCOUNT_ID",
          "idValue": "{$request.params.idValue}",
          "lastName": "Smith",
          "merchantClassificationCode": "1234",
          "middleName": "",
          "kycInformation": "This is encrypted KYC information"
        },
        "statusCode": "200",
        "scripts": {
          "scriptingEngine": "postman"
        }
      },
      "type": "FIXED_RESPONSE"
    },
    "type": "response",
    "version": 1
  },
  {
    "ruleId": 9,
    "priority": 1,
    "description": "post /quoterequests",
    "apiVersion": {
      "minorVersion": 1,
      "majorVersion": 2,
      "type": "sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets",
      "asynchronous": false,
      "prefix": "/backend",
      "specFile": "spec_files/api_definitions/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1/api_spec.yaml",
      "callbackMapFile": "spec_files/api_definitions/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1/callback_map.json",
      "responseMapFile": "spec_files/api_definitions/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1/response_map.json",
      "jsfRefFile": "spec_files/api_definitions/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1/mockRef.json",
      "triggerTemplatesFolder": "spec_files/api_definitions/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1/trigger_templates"
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/quoterequests"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        }
      ]
    },
    "event": {
      "method": null,
      "path": null,
      "params": {
        "body": {
          "quoteId": "{$request.body.quoteId}",
          "transactionId": "{$request.body.transactionId}",
          "transferAmount": "{$request.body.amount}",
          "transferAmountCurrency": "{$request.body.currency}"
        },
        "statusCode": "200",
        "scripts": {
          "scriptingEngine": "postman"
        }
      },
      "type": "FIXED_RESPONSE"
    },
    "type": "response",
    "version": 1
  },
  {
    "ruleId": 10,
    "priority": 1,
    "description": "post /transfers",
    "apiVersion": {
      "minorVersion": 1,
      "majorVersion": 2,
      "type": "sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets",
      "asynchronous": false,
      "prefix": "/backend",
      "specFile": "spec_files/api_definitions/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1/api_spec.yaml",
      "callbackMapFile": "spec_files/api_definitions/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1/callback_map.json",
      "responseMapFile": "spec_files/api_definitions/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1/response_map.json",
      "jsfRefFile": "spec_files/api_definitions/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1/mockRef.json",
      "triggerTemplatesFolder": "spec_files/api_definitions/sdk-scheme-adapter-backend-v2_1_0-openapi3-snippets_2.1/trigger_templates"
    },
    "conditions": {
      "all": [
        {
          "fact": "operationPath",
          "operator": "equal",
          "value": "/transfers"
        },
        {
          "fact": "method",
          "operator": "equal",
          "value": "post"
        }
      ]
    },
    "event": {
      "method": null,
      "path": null,
      "params": {
        "body": {
          "completedTimestamp": "{$environment.completedTimestamp}",
          "homeTransactionId": "123",
          "transferState": "COMMITTED"
        },
        "statusCode": "200",
        "scripts": {
          "exec": [
            "environment.completedTimestamp = new Date().toISOString()"
          ],
          "scriptingEngine": "javascript"
        }
      },
      "type": "FIXED_RESPONSE"
    },
    "type": "response",
    "version": 1
  }
]
