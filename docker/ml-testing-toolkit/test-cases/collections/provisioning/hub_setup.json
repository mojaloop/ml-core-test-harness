{
  "name": "multi",
  "test_cases": [
    {
      "id": 1,
      "name": "Hub Account",
      "meta": {
        "info": "Hub Account"
      },
      "requests": [
        {
          "id": 1,
          "meta": {
            "info": "Add Hub Account-HUB_MULTILATERAL_SETTLEMENT"
          },
          "description": "Add Hub Account-HUB_MULTILATERAL_SETTLEMENT",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/accounts",
          "path": "/participants/{$inputs.HUB_NAME}/accounts",
          "method": "post",
          "params": {
            "name": "{$inputs.HUB_NAME}"
          },
          "body": {
            "type": "HUB_MULTILATERAL_SETTLEMENT",
            "currency": "{$inputs.currency}"
          },
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "hub_operator"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "status to be 201 if not exists or 400 if exists",
                "exec": [
                  "if (response.body.errorInformation) {",
                  "  expect(response.status).to.equal(400)",
                  "} else {",
                  "  expect(response.status).to.equal(201)",
                  "}"
                ]
              }
            ]
          }
        },
        {
          "id": 2,
          "meta": {
            "info": "Add Hub Account-HUB_RECONCILIATION"
          },
          "description": "Add Hub Account-HUB_RECONCILIATION",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/accounts",
          "path": "/participants/{$inputs.HUB_NAME}/accounts",
          "method": "post",
          "params": {
            "name": "{$inputs.HUB_NAME}"
          },
          "body": {
            "type": "HUB_RECONCILIATION",
            "currency": "{$inputs.currency}"
          },
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "hub_operator"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "status to be 201 if not exists or 400 if exists",
                "exec": [
                  "if (response.body.errorInformation) {",
                  "  expect(response.status).to.equal(400)",
                  "} else {",
                  "  expect(response.status).to.equal(201)",
                  "}"
                ]
              }
            ]
          }
        },
        {
          "id": 3,
          "meta": {
            "info": "Hub Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL"
          },
          "description": "Hub Set Email-SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/endpoints",
          "path": "/participants/{$inputs.HUB_NAME}/endpoints",
          "method": "post",
          "params": {
            "name": "{$inputs.HUB_NAME}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "hub_operator"
          },
          "body": {
            "type": "SETTLEMENT_TRANSFER_POSITION_CHANGE_EMAIL",
            "value": "{$inputs.hubEmail}"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 201",
                "exec": [
                  "expect(response.status).to.equal(201)"
                ]
              }
            ]
          }
        },
        {
          "id": 4,
          "meta": {
            "info": "Hub Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL"
          },
          "description": "Hub Set Email-NET_DEBIT_CAP_ADJUSTMENT_EMAIL",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/endpoints",
          "path": "/participants/{$inputs.HUB_NAME}/endpoints",
          "method": "post",
          "params": {
            "name": "{$inputs.HUB_NAME}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "hub_operator"
          },
          "body": {
            "type": "NET_DEBIT_CAP_ADJUSTMENT_EMAIL",
            "value": "{$inputs.hubEmail}"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 201",
                "exec": [
                  "expect(response.status).to.equal(201)"
                ]
              }
            ]
          }
        },
        {
          "id": 5,
          "meta": {
            "info": "Hub Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL"
          },
          "description": "Hub Set Email-NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/endpoints",
          "path": "/participants/{$inputs.HUB_NAME}/endpoints",
          "method": "post",
          "params": {
            "name": "{$inputs.HUB_NAME}"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "hub_operator"
          },
          "body": {
            "type": "NET_DEBIT_CAP_THRESHOLD_BREACH_EMAIL",
            "value": "{$inputs.hubEmail}"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Status code is 201",
                "exec": [
                  "expect(response.status).to.equal(201)"
                ]
              }
            ]
          }
        },
        {
          "id": 6,
          "meta": {
            "info": "Add Hub Account-HUB_MULTILATERAL_SETTLEMENT Second Currency"
          },
          "description": "Add Hub Account-HUB_MULTILATERAL_SETTLEMENT Second Currency",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/accounts",
          "path": "/participants/{$inputs.HUB_NAME}/accounts",
          "method": "post",
          "params": {
            "name": "{$inputs.HUB_NAME}"
          },
          "body": {
            "type": "HUB_MULTILATERAL_SETTLEMENT",
            "currency": "{$inputs.currency2}"
          },
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "hub_operator"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "status to be 201 if not exists or 400 if exists",
                "exec": [
                  "if (response.body.errorInformation) {",
                  "  expect(response.status).to.equal(400)",
                  "} else {",
                  "  expect(response.status).to.equal(201)",
                  "}"
                ]
              }
            ]
          }
        },
        {
          "id": 7,
          "meta": {
            "info": "Add Hub Account-HUB_RECONCILIATION Second Currency"
          },
          "description": "Add Hub Account-HUB_RECONCILIATION Second Currency",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/participants/{name}/accounts",
          "path": "/participants/{$inputs.HUB_NAME}/accounts",
          "method": "post",
          "params": {
            "name": "{$inputs.HUB_NAME}"
          },
          "body": {
            "type": "HUB_RECONCILIATION",
            "currency": "{$inputs.currency2}"
          },
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "hub_operator"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "status to be 201 if not exists or 400 if exists",
                "exec": [
                  "if (response.body.errorInformation) {",
                  "  expect(response.status).to.equal(400)",
                  "} else {",
                  "  expect(response.status).to.equal(201)",
                  "}"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "id": 2,
      "type": "Settlement Models",
      "name": "Settlement Models",
      "requests": [
        {
          "id": 2,
          "meta": {
            "info": "Create settlement model DEFERRED NET USD"
          },
          "description": "Create settlement model DEFERRED NET USD",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/settlementModels",
          "path": "/settlementModels",
          "method": "post",
          "body": {
            "name": "DEFERREDNET{$inputs.currency}",
            "settlementGranularity": "NET",
            "settlementInterchange": "MULTILATERAL",
            "settlementDelay": "DEFERRED",
            "requireLiquidityCheck": true,
            "ledgerAccountType": "POSITION",
            "autoPositionReset": true,
            "currency": "{$inputs.currency}",
            "settlementAccountType": "SETTLEMENT"
          },
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "hub_operator"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "status to be 201 if not exists or 400 if exists",
                "exec": [
                  "if (response.body.errorInformation) {",
                  "  expect(response.status).to.equal(400)",
                  "} else {",
                  "  expect(response.status).to.equal(201)",
                  "}"
                ]
              }
            ]
          }
        },
        {
          "id": 3,
          "meta": {
            "info": "Create settlement model DEFAULT DEFERRED NET"
          },
          "description": "Create settlement model DEFAULT DEFERRED NET",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 1,
            "type": "central_admin"
          },
          "operationPath": "/settlementModels",
          "path": "/settlementModels",
          "method": "post",
          "body": {
            "name": "DEFAULTDEFERREDNET",
            "settlementGranularity": "NET",
            "settlementInterchange": "MULTILATERAL",
            "settlementDelay": "DEFERRED",
            "requireLiquidityCheck": true,
            "ledgerAccountType": "POSITION",
            "autoPositionReset": true,
            "settlementAccountType": "SETTLEMENT"
          },
          "headers": {
            "Content-Type": "application/json",
            "FSPIOP-Source": "hub_operator"
          },
          "url": "{$inputs.HOST_CENTRAL_LEDGER}",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "status to be 201 if not exists or 400 if exists",
                "exec": [
                  "if (response.body.errorInformation) {",
                  "  expect(response.status).to.equal(400)",
                  "} else {",
                  "  expect(response.status).to.equal(201)",
                  "}"
                ]
              }
            ]
          }
        }
      ]
    },
    {
      "id": 3,
      "type": "Oracle Onboarding",
      "name": "Oracle Onboarding",
      "requests": [
        {
          "id": 1,
          "meta": {
            "info": "Register ACCOUNT_ID Oracle"
          },
          "description": "Register ACCOUNT_ID Oracle",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 1,
            "type": "als_admin"
          },
          "operationPath": "/oracles",
          "path": "/oracles",
          "method": "post",
          "body": {
            "oracleIdType": "ACCOUNT_ID",
            "endpoint": {
              "value": "{$inputs.HOST_SIMULATOR}/oracle",
              "endpointType": "URL"
            },
            "currency": "{$inputs.currency}",
            "isDefault": true
          },
          "headers": {
            "Content-Type": "application/vnd.interoperability.participants+json;version=2.0",
            "Accept": "application/vnd.interoperability.participants+json;version=1",
            "Date": "{$function.generic.curDate}"
          },
          "url": "{$inputs.HOST_ACCOUNT_LOOKUP_ADMIN}",
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "status to be 201 or errorCode 2001 already exists",
                "exec": [
                  "if (response.body.errorInformation) {",
                  "  expect(response.body.errorInformation.errorCode).to.equal(\"2001\")",
                  "} else {",
                  "  expect(response.status).to.equal(201)",
                  "}"
                ]
              }
            ]
          }
        }
      ]
    }
  ]
}
