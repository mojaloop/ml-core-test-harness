{
  "options": {},
  "name": "collections_tests_fx_payee_sdk",
  "test_cases": [
    {
      "id": 1,
      "name": "Payee SDK changes",
      "fileInfo": {
        "path": "collections/tests/fx/payee_sdk.json",
        "labels": [
          "fx-sdk"
        ]
      },
      "meta": {
        "info": "Payee SDK changes"
      },
      "requests": [
        {
          "id": 1,
          "description": "Add Participant to ALS",
          "apiVersion": {
            "minorVersion": 1,
            "majorVersion": 1,
            "type": "fspiop",
            "asynchronous": true,
            "specFile": "spec_files/api_definitions/fspiop_1.1/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/fspiop_1.1/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/fspiop_1.1/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/fspiop_1.1/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_1.1/trigger_templates"
          },
          "operationPath": "/participants/{Type}/{ID}",
          "path": "/participants/{$inputs.toIdType}/{$inputs.FXP_TO_PARTY_ID}",
          "method": "post",
          "params": {
            "Type": "{$inputs.toIdType}",
            "ID": "{$inputs.FXP_TO_PARTY_ID}"
          },
          "body": {
            "fspId": "{$inputs.FXP_FXPAYEEDFSP_ID}"
          },
          "url": "{$inputs.HOST_ACCOUNT_LOOKUP_SERVICE}",
          "headers": {
            "FSPIOP-Source": "{$inputs.toFspId}",
            "Authorization": "{$inputs.PAYEE_BEARER_TOKEN}",
            "Accept": "{$inputs.acceptParticipants}",
            "Content-Type": "{$inputs.contentTypeParticipants}",
            "Date": "{$function.generic.curDate}"
          },
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Response status to be 202",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              }
            ]
          },
          "disabled": false
        },
        {
          "id": 2,
          "description": "Get party info",
          "apiVersion": {
            "minorVersion": 0,
            "majorVersion": 2,
            "type": "fspiop",
            "asynchronous": true,
            "additionalApi": true,
            "specFile": "spec_files/api_definitions/fspiop_2.0/api_spec.yaml",
            "callbackMapFile": "spec_files/api_definitions/fspiop_2.0/callback_map.json",
            "responseMapFile": "spec_files/api_definitions/fspiop_2.0/response_map.json",
            "jsfRefFile": "spec_files/api_definitions/fspiop_2.0/mockRef.json",
            "triggerTemplatesFolder": "spec_files/api_definitions/fspiop_2.0/trigger_templates"
          },
          "operationPath": "/parties/{Type}/{ID}",
          "path": "/parties/MSISDN/{$inputs.FXP_TO_PARTY_ID}",
          "method": "get",
          "params": {
            "Type": "MSISDN",
            "ID": "{$inputs.FXP_TO_PARTY_ID}"
          },
          "url": "{$inputs.HOST_ACCOUNT_LOOKUP_SERVICE}",
          "headers": {
            "Content-Type": "{$inputs.contentType}",
            "Date": "{$function.generic.curDate}",
            "FSPIOP-Source": "{$inputs.FXP_PAYER_DFSP_ID}",
            "Accept": "{$inputs.accept}"
          },
          "disabled": false,
          "tests": {
            "assertions": [
              {
                "id": 1,
                "description": "Response status to be 202",
                "exec": [
                  "expect(response.status).to.equal(202)"
                ]
              },
              {
                "id": 3,
                "description": "Callback Content Length not 0",
                "exec": [
                  "expect(callback.headers['Content-Length']).to.not.equal('0')"
                ]
              },
              {
                "id": 4,
                "description": "Callback body should contain party",
                "exec": [
                  "expect(callback.body).to.have.property('party')"
                ]
              },
              {
                "id": 6,
                "description": "Callback FSPIOP-Destination same as request FSPIOP-Source",
                "exec": [
                  "expect(callback.headers['fspiop-destination']).to.equal('{$request.headers['FSPIOP-Source']}')"
                ]
              },
              {
                "id": 8,
                "description": "Callback partyIdInfo (partyIdType, partyIdentifier)",
                "exec": [
                  "expect(callback.body.party.partyIdInfo.partyIdType).to.equal('{$inputs.toIdType}')",
                  "expect(callback.body.party.partyIdInfo.partyIdentifier).to.equal('{$inputs.FXP_TO_PARTY_ID}')"
                ]
              },
              {
                "id": 9,
                "description": "Callback contains supportedCurrencies",
                "exec": [
                  "expect(callback.body.party).to.have.property('supportedCurrencies')",
                  "expect(callback.body.party.supportedCurrencies).to.have.lengthOf.at.least(1)"
                ]
              },
              {
                "id": 10,
                "description": "Callback contains kycInformation",
                "exec": [
                  "expect(callback.body.party.personalInfo).to.have.property('kycInformation')",
                  ""
                ]
              }
            ]
          }
        }
      ]
    }
  ]
}
